package edu.au.cc.gallery.tools.ui;
import static spark.Spark.*;
import spark.Request;
import spark.Response;

public class RouteMapper {

    public RouteMapper() {
    }
    
    /**Connection and Routing Methods */
   public void connectToWebApp() {
      connectToServer();
      getWebAppPages();
      getRoutesToDB();
      getRoutesToActionConfirmations();
    }


/**This method opens up a connection to the server. It will try to use Jetty as the main server,                     
but if that fails, it'll use nginx as a backup on port 5000. Nginx is running as a proxy server to Jetty.*/
    private  void connectToServer() {
        String portString = System.getenv("JETTY_PORT");
        //If we can't access JETTY_PORT, choose 5000 as a backup                                                     
        if ((portString == null) || (portString.equals(""))) {
            port(5000);
        }
        else {
            port(Integer.parseInt(portString));
        }
    }



    private void getWebAppPages() {
        get("/admin",  (req, res) -> UserAdminHelper.modelMaker(req, res, "admin.hbs"));
        get("/", (req, res) -> UserAdminHelper.modelMaker(req, res, "home.hbs"));
        get ("/hello", (req, res) -> "Hello Testing!");
    }


private void getRoutesToDB() {
        get("/admin/list", (req, res) -> UserAdminHelper.list(req, res));
	 post("/admin/add", (req, res) ->  UserAdminHelper.add(req, res));                                                   get("/admin/change", (req, res) -> UserAdminHelper.change(req, res));                                               get("/admin/delete", (req, res) -> UserAdminHelper.delete(req, res));                                         }


    private void getRoutesToActionConfirmations() {
        post("/admin/changePassword", (req,res) -> UserAdminHelper.sendPasswordChange(req, res));                           post("/admin/changeName", (req,res) -> UserAdminHelper.sendNameChange(req, res)); 
        }





}
